@article{Erdogan2005,
abstract = { Fast virus scanning is becoming increasingly important in today's Internet. While Moore's law continues to double CPU cycle speed, virus scanning applications fail to ride on the performance wave due to their frequent random memory accesses. This paper proposes Hash-AV, a virus scanning "booster" technique that aims to take advantage of improvements in CPU performance. Using a set of hash functions and a bloom filter array that fits in CPU second-level (L2) caches, Hash-AV determines the majority of "no-match" cases without accesses to main memory. Experiments show that Hash-AV improves the performance of the open-source virus scanner Clam-AV by a factor of 2.5 to 10. The key to Hash-AV's success lies in a set of "bad but cheap" hash functions that are used as initial hashes. The speed of Hash-AV makes it well suited for "on-access" virus scanning, providing greater protections to the user. Through intercepting system calls and wrapping glibc libraries, we have implemented an "on-access" version for Hash-AV+Clam-AV. The on-access scanner can examine input data at a throughput of over 200 Mb/s, making it suitable for network-based virus scanning.},
author = {Erdogan, Ozgun and Cao, Pei},
doi = {10.1109/GLOCOM.2005.1577953},
file = {:C$\backslash$:/Users/Charlie/Pictures/hash-av.pdf:pdf},
isbn = {0780394143},
issn = {1747-8405},
journal = {GLOBECOM - IEEE Global Telecommunications Conference},
pages = {1767--1772},
title = {{Hash-AV: Fast virus signature scanning by cache-resident filters}},
volume = {3},
year = {2005}
}
@techreport{Symantec2006,
author = {Symantec},
file = {:C$\backslash$:/Users/Charlie/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Symantec - 2006 - Windows Rootkit Overview.pdf:pdf},
title = {{Windows Rootkit Overview}},
year = {2006}
}
@article{Buterin2014,
author = {Buterin, Vitalik},
file = {:C$\backslash$:/Users/Charlie/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Buterin - 2014 - A next-generation smart contract and decentralized application platform.pdf:pdf},
journal = {Etherum},
pages = {1--36},
title = {{A next-generation smart contract and decentralized application platform}},
url = {http://buyxpr.com/build/pdfs/EthereumWhitePaper.pdf},
year = {2014}
}
@article{King2006,
author = {King, Valerie and Saia, Jared},
doi = {10.1109/FOCS.2006.77},
file = {:C$\backslash$:/Users/Charlie/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/King, Saia - 2006 - Towards secure and scalable computation in peer-to-peer networks.pdf:pdf},
isbn = {0-7695-2720-5},
journal = {Foundations of Computer \ldots},
pages = {87--98},
publisher = {Ieee},
title = {{Towards secure and scalable computation in peer-to-peer networks}},
year = {2006}
}
@article{Chuvakin2003,
author = {Chuvakin, A},
file = {:C$\backslash$:/Users/Charlie/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Chuvakin - 2003 - An overview of unix rootkits.pdf:pdf},
journal = {Megasecurity Labs},
pages = {1--27},
title = {{An overview of unix rootkits}},
url = {http://www.thehackademy.net/madchat/vxdevl/avtech/An Overview of Unix Rootkits.pdf},
year = {2003}
}
@article{Tuck,
author = {Tuck, N. and Sherwood, T. and Calder, B. and Varghese, G.},
doi = {10.1109/INFCOM.2004.1354682},
isbn = {0-7803-8355-9},
journal = {Ieee Infocom 2004},
keywords = {network algorithms,system design},
pages = {2628--2639},
publisher = {Ieee},
title = {{Deterministic memory-efficient string matching algorithms for intrusion detection}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=1354682},
volume = {4}
}
@book{Buford2009,
abstract = {Increasingly portable electronic devices are providing functionality previously restricted to desktop computers. Such devices can connect to the Internet using broadband wireless network interfaces. Using mobile devices as peers in an overlay introduces the possibility of increased churn due to frequent roaming transitions that such devices experience. Possible solutions are discussed in this chapter, which include using mobility support in the native layer, virtualizing such support in the overlay itself, or restricting the role of mobile devices as peers. In addition, mobile devices and other networked consumer electronics introduce a degree of resource heterogeneity into the peer population. Adaptability to heterogeneous peer conditions is the scope of another category of P2P overlays called variable-hop overlays, which are discussed here. As mobile ad hoc networks (MANETs) and sensor networks proliferate, there is likely to be significant value in integrating such networks into P2P overlays; proposals for doing so are discussed at the end of the chapter.},
author = {Buford, John F. and Yu, Heather and Lua, Eng Keong},
booktitle = {P2P Networking and Applications},
doi = {10.1016/B978-0-12-374214-8.00013-1},
isbn = {9780123742148},
pages = {299--317},
title = {{P2P Networking and Applications}},
year = {2009}
}
@misc{Acdx2008,
author = {Acdx},
file = {:C$\backslash$:/Users/Charlie/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Acdx - 2008 - Digital Signature diagram.svg:svg},
publisher = {wikimedia.org},
title = {{Digital Signature diagram}},
year = {2008}
}
@article{Juels1997,
abstract = {Blind digital signatures were introduced by Chaum. In this paper, we show how security and blindness properties for blind digital signatures, can be simultaneously defined and satisfied, assuming an arbitrary one-way trapdoor permutation family. Thus, this paper presents the first complexity-based proof of security for blind signatures.},
author = {Juels, Ari and Luby, Michael and Ostrovsky, Rafail},
doi = {10.1007/BFb0052233},
file = {:C$\backslash$:/Users/Charlie/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Juels, Luby, Ostrovsky - 1997 - Security of blind digital signatures.pdf:pdf},
isbn = {978-3-540-63384-6, 978-3-540-69528-8},
journal = {Advances in Cryptology—CRYPTO'97},
pages = {150--164},
title = {{Security of blind digital signatures}},
url = {http://link.springer.com/chapter/10.1007/BFb0052233$\backslash$nhttp://link.springer.com/content/pdf/10.1007/BFb0052233.pdf},
year = {1997}
}
@misc{wiki:asymmEncryption,
annote = {[Online; accessed 16-November-2014]},
author = {Wikipedia},
title = {{Public-key cryptography - Wikipedia, The Free Encyclopedia}},
url = {http://en.wikipedia.org/w/index.php?title=Public-key\_cryptography\&oldid=633702516},
year = {2014}
}
@article{Cohen1987,
author = {Cohen, Frederick},
file = {:C$\backslash$:/Users/Charlie/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Cohen - 1987 - Computer viruses theory and experiments.pdf:pdf},
journal = {Computers \& security},
title = {{Computer viruses: theory and experiments}},
year = {1987}
}
@article{Sukwong2011,
abstract = {Despite the widespread use of antivirus software, malware remains pervasive. A new study compares the effectiveness of six commercial AV products.},
author = {Sukwong, Orathai and Kim, Hyong S. and Hoe, James C.},
doi = {10.1109/MC.2010.187},
isbn = {0018-9162},
issn = {00189162},
journal = {Computer},
keywords = {Invasive software,Operating systems,Security and privacy protection},
pages = {63--70},
title = {{Commercial antivirus software effectiveness: An empirical study}},
volume = {44},
year = {2011}
}
@misc{hashTree,
author = {G\"{o}thberg, David},
file = {:C$\backslash$:/Users/Charlie/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/G\"{o}thberg - 2005 - Merkle Trees.svg:svg},
title = {{Merkle Trees}},
year = {2005}
}
@inproceedings{Rieck2008,
abstract = {Malicious software in form of Internet worms, computer viruses, and
  Trojan horses poses a major threat to the security of networked
  systems. The diversity and amount of its variants severely undermine
  the effectiveness of classical signature-based detection. Yet
  variants of malware families share typical behavioral
    patterns reflecting its origin and purpose. We aim to exploit
  these shared patterns for classification of malware and propose a
  method for learning and discrimination of malware behavior. Our
  method proceeds in three stages: (a) behavior of collected malware
  is monitored in a sandbox environment, (b) based on a corpus of
  malware labeled by an anti-virus scanner a malware behavior
    classifier is trained using learning techniques and (c)
  discriminative features of the behavior models are ranked for
  explanation of classification decisions. Experiments with different
  heterogeneous test data collected over several months using
  honeypots demonstrate the effectiveness of our method, especially in
  detecting novel instances of malware families previously not
  recognized by commercial anti-virus software.},
author = {Rieck, Konrad and Holz, Thorsten and Willems, Carsten and D\"{u}ssel, Patrick and Laskov, Pavel},
booktitle = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
doi = {10.1007/978-3-540-70542-0\_6},
file = {:C$\backslash$:/Users/Charlie/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Rieck et al. - 2008 - Learning and classification of malware behavior.pdf:pdf},
isbn = {3540705414},
issn = {03029743},
pages = {108--125},
title = {{Learning and classification of malware behavior}},
volume = {5137 LNCS},
year = {2008}
}
@article{Garetto2003,
abstract = { In this paper we present analytical techniques that can be used to better understand the behavior of malware, a generic term that refers to all kinds of malicious software programs propagating on the Internet, such as e-mail viruses and worms. We develop a modeling methodology based on Interactive Markov Chains that is able to capture many aspects of the problem, especially the impact of the underlying topology on the spreading characteristics of malware. We propose numerical methods to obtain useful bounds and approximations in the case of very large systems, validating our results through simulation. An analytic methodology represents a fundamentally important step in the development of effective countermeasures for future malware activity. Furthermore, we believe our approach can help to understand a wide range of "dynamic interactions on networks", such as routing protocols and peer-to-peer applications.},
author = {Garetto, M. and Gong, W. and Towsley, D.},
doi = {10.1109/INFCOM.2003.1209209},
file = {:C$\backslash$:/Users/Charlie/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Garetto, Gong, Towsley - 2003 - Modeling malware spreading dynamics.pdf:pdf},
isbn = {0-7803-7752-4},
issn = {0743-166X},
journal = {IEEE INFOCOM 2003. Twenty-second Annual Joint Conference of the IEEE Computer and Communications Societies (IEEE Cat. No.03CH37428)},
title = {{Modeling malware spreading dynamics}},
volume = {3},
year = {2003}
}
@article{Leis2013,
author = {Leis, V. and Kemper, Alfons and Neumann, T.},
doi = {10.1109/ICDE.2013.6544812},
isbn = {978-1-4673-4910-9},
journal = {2013 IEEE 29th International Conference on Data Engineering (ICDE)},
month = apr,
pages = {38--49},
publisher = {Ieee},
title = {{The adaptive radix tree: ARTful indexing for main-memory databases}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6544812},
year = {2013}
}
@article{Mishra2010,
author = {Mishra, Umakant},
doi = {10.2139/ssrn.1916673},
file = {:C$\backslash$:/Users/Charlie/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Mishra - 2010 - An Introduction to Virus Scanners.pdf:pdf},
issn = {1556-5068},
journal = {SSRN eJournal},
title = {{An Introduction to Virus Scanners}},
year = {2010}
}
@article{Zhang2012,
author = {Zhang, Li and Wang, Zhao and Chen, Zhong},
doi = {10.1109/ISRA.2012.6219174},
file = {:C$\backslash$:/Users/Charlie/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Zhang, Wang, Chen - 2012 - P2PAV Anti-virus through P2P.pdf:pdf},
isbn = {978-1-4673-2207-2},
journal = {2012 IEEE Symposium on Robotics and Applications (ISRA)},
keywords = {-malicious,anti-virus,cloud-base antivirus,p2p},
month = jun,
pages = {265--267},
publisher = {Ieee},
title = {{P2PAV: Anti-virus through P2P}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6219174},
year = {2012}
}
@article{Moshchuk2006,
author = {Moshchuk, Alexander and Bragin, Tanya and Gribble, SD and Levy, HM},
file = {:C$\backslash$:/Users/Charlie/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Moshchuk et al. - 2006 - A Crawler-based Study of Spyware in the Web.pdf:pdf},
journal = {NDSS},
title = {{A Crawler-based Study of Spyware in the Web.}},
url = {http://www.eecs.harvard.edu/~mdw/course/cs260r/papers/spycrawler-ndss06.pdf},
year = {2006}
}
@article{King2012,
author = {King, Sunny and Nadal, Scott},
file = {:C$\backslash$:/Users/Charlie/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/King, Nadal - 2012 - PPCoin peer-to-peer crypto-currency with proof-of-stake.pdf:pdf},
title = {{PPCoin: peer-to-peer crypto-currency with proof-of-stake}},
year = {2012}
}
@inproceedings{Karpilovsky2005,
abstract = {How I learned to stop worrying about errors and love memory efficient data structures},
author = {Karpilovsky, Elliott},
booktitle = {COS598E},
pages = {106},
title = {{Bloom Filters}},
year = {2005}
}
@article{Preneel2003,
abstract = {The subject of this thesis is the study of cryptographic hash functions. The importance of hash functions for protecting the authenticity of information is demonstrated. Applications include integrity protection, conventional message authentication and digital signatures. Theoretical results on cryptographic hash functions are reviewed. The information theoretic approach to authentication is described, and the practicality of schemes based on universal hash functions is studied. An overview is given of the complexity theoretic deﬁnitions and constructions. The main contribution of this thesis lies in the study of practical constructions for hash functions. A general model for hash functions is proposed and a taxonomy for attacks is presented. Then all schemes in the literature are divided into three classes: hash functions based on block ciphers, hash functions based on modular arithmetic and dedicated hash functions. An overview is given of existing attacks, new attacks are demonstrated, and new schemes are proposed. The study of basic building blocks of cryptographic hash functions leads to the study of the cryptographic properties of Boolean functions. New criteria are deﬁned and functions satisfying new and existing criteria are studied.},
author = {Preneel, Bart and Lowry, Malcolm},
file = {:C$\backslash$:/Users/Charlie/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Preneel, Lowry - 2003 - Analysis and Design of Cryptographic Hash Functions.pdf:pdf},
journal = {Doct Dissertation KULeuven},
title = {{Analysis and Design of Cryptographic Hash Functions}},
url = {http://homes.esat.kuleuven.be/~preneel/phd\_preneel\_feb1993.pdf},
year = {2003}
}
@inproceedings{Li2011,
abstract = {Boot kit, as an innovative root kit technology, transfer its storage location from the file system to the hardware store, and activates itself while or even before the operating system kernel is loaded. Therefore, boot kit can tamper the operating system and control the whole computer system. Compared to classic malware, it achieves a more powerful capability of hiding and controlling. This paper takes an overview of existing various boot kit technologies and summarizes their technical characteristics. This opens a door to the malware defenders for preventing the computer systems from boot kit.},
author = {Li, Xiang and Wen, Yan and Huang, Min Huan and Liu, Qiang},
booktitle = {Proceedings - 2011 7th International Conference on Mobile Ad-hoc and Sensor Networks, MSN 2011},
doi = {10.1109/MSN.2011.19},
isbn = {9780769546100},
keywords = {Malware,bootkit,operating system},
pages = {428--431},
title = {{An overview of bootkit attacking approaches}},
year = {2011}
}
@article{Bontchev2005,
author = {Bontchev, Vesselin},
file = {:C$\backslash$:/Users/Charlie/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Bontchev - 2005 - Current status of the CARO malware naming scheme.pdf:pdf},
journal = {Virus Bulletin (VB2005), Dublin, Ireland},
title = {{Current status of the CARO malware naming scheme}},
url = {http://scholar.google.com/scholar?hl=en\&btnG=Search\&q=intitle:Current+Status+of+the+CARO+Malware+Naming+Scheme\#0},
year = {2005}
}
@article{Andrychowicz2013,
author = {Andrychowicz, Marcin},
doi = {10.1109/SP.2014.35},
file = {:C$\backslash$:/Users/Charlie/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Andrychowicz - 2013 - Secure Multiparty Computations on BitCoin.pdf:pdf},
isbn = {978-1-4799-4686-0},
journal = {IACR Cryptology \ldots},
keywords = {bitcoin,lottery,multiparty},
month = may,
pages = {443--458},
publisher = {Ieee},
title = {{Secure Multiparty Computations on BitCoin.}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6956580 http://www.ieee-security.org/TC/SP2014/papers/SecureMultipartyComputationsonBitcoin.pdf},
year = {2013}
}
@article{Huang2010,
abstract = {Deep Packet Inspection (DPI) is essential for network security to scan both packet header and payload to search for predefined signatures. As link rates and traffic volumes of Internet are constantly growing, string matching using Deterministic Finite Automaton (DFA) will be the performance bottleneck of DPI. The recently proposed bit-split string matching algorithm suffers from the unnecessary state transitions problem. The root cause lies in the fact that the bit-split algorithm makes pattern matching in a "not seeing the forest for trees" approach, where each tiny DFA only processes a b-bit substring of each input character, but cannot check whether the entire character belongs to the alphabet of original DFA. This paper presents a byte- filtered string matching algorithm, where Bloom filters are used to preprocess each character of every incoming packet to check whether the character belongs to the original alphabet, before performing bit- split string matching. If not, each tiny DFA either makes a transition to its initial state or stops any state transition. Experimental results demonstrate that compared with the bit- split algorithm, our byte-filtered algorithm enormously reduces the string matching time as well as the number of state transitions of tiny DFAs on both synthetic and real signature rule sets.},
author = {Huang, Kun and Zhang, Dafang and Qin, Zheng},
doi = {10.1016/j.comcom.2010.04.043},
issn = {01403664},
journal = {Computer Communications},
keywords = {Bit-split,Bloom filter,Byte filter,Intrusion detection,String matching},
number = {15},
pages = {1785--1794},
title = {{Accelerating the bit-split string matching algorithm using Bloom filters}},
volume = {33},
year = {2010}
}
@inproceedings{Goodrich2011,
abstract = {We present a version of the Bloom filter data structure that supports not only the insertion, deletion, and lookup of key-value pairs, but also allows a complete listing of its contents with high probability, as long the number of key-value pairs is below a designed threshold. Our structure allows the number of key-value pairs to greatly exceed this threshold during normal operation. Exceeding the threshold simply temporarily prevents content listing and reduces the probability of a successful lookup. If later entries are deleted to return the structure below the threshold, everything again functions appropriately. We also show that simple variations of our structure are robust to certain standard errors, such as the deletion of a key without a corresponding insertion or the insertion of two distinct values for a key. The properties of our structure make it suitable for several applications, including database and networking applications that we highlight.},
archivePrefix = {arXiv},
arxivId = {1101.2245},
author = {Goodrich, Michael T. and Mitzenmacher, Michael},
booktitle = {2011 49th Annual Allerton Conference on Communication, Control, and Computing (Allerton)},
doi = {10.1109/Allerton.2011.6120248},
eprint = {1101.2245},
isbn = {978-1-4577-1818-2},
month = sep,
pages = {792--799},
publisher = {IEEE},
title = {{Invertible bloom lookup tables}},
url = {http://arxiv.org/abs/1101.2245 http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6120248},
year = {2011}
}
@article{Eppstein2007,
abstract = {We introduce the straggler identification problem, in which an algorithm must determine the identities of the remaining members of a set after it has had a large number of insertion and deletion operations performed on it, and now has relatively few remaining members. The goal is to do this in o(n) space, where n is the total number of identities. The straggler identification problem has applications, for example, in determining the set of unacknowledged packets in a high-bandwidth multicast data stream. We provide a deterministic solution to the straggler identification problem that uses only O(d log n) bits and is based on a novel application of Newton's identities for symmetric polynomials. This solution can identify any subset of d stragglers from a set of n O(log n)-bit identifiers, assuming that there are no false deletions of identities not already in the set. Indeed, we give a lower bound argument that shows that any small-space deterministic solution to the straggler identification problem cannot be guaranteed to handle false deletions. Nevertheless, we show that there is a simple randomized solution using O(d log n log(1/epsilon)) bits that can maintain a multiset and solve the straggler identification problem, tolerating false deletions, where epsilon>0 is a user-defined parameter bounding the probability of an incorrect response. This randomized solution is based on a new type of Bloom filter, which we call the invertible Bloom filter.},
archivePrefix = {arXiv},
arxivId = {0704.3313},
author = {Eppstein, David and Goodrich, Michael T.},
eprint = {0704.3313},
journal = {Knowledge and Data Engineering, \ldots},
keywords = {bloom filters,data streams,newton,s identities,straggler identification},
month = apr,
pages = {1--18},
title = {{Straggler Identification in Round-Trip Data Streams via Newton's Identities and Invertible Bloom Filters}},
url = {http://arxiv.org/abs/0704.3313},
year = {2007}
}
@misc{AV-TEST2014,
author = {AV-TEST},
file = {:C$\backslash$:/Users/Charlie/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/AV-TEST - 2014 - VOM SPAM ZUM TEST.pdf:pdf},
pages = {8--9},
title = {{VOM SPAM ZUM TEST}},
year = {2014}
}
@article{Xue2008,
abstract = {Antivirus solutions are now a common component of computer systems. However, security issues pertaining to the antivirus software itself have not captured enough attentions of antivirus vendors and computer users. This paper discusses why antivirus software is vulnerable to various attacks and why its security is so critical. It examines the tools and techniques, especially fuzzing techniques, used by attackers to expose vulnerabilities in antivirus solutions. It also looks at the ways in which attackers exploit these vulnerabilities The paper thus aims to raise levels of consciousness about the security of the security product.},
author = {Xue, Feng},
journal = {Proceedings of the Black Hat Europe conference},
keywords = {antivirus,audit,exploitation,fuzzing,security product},
title = {{Attacking antivirus}},
url = {http://blackhat.com/presentations/bh-europe-08/Feng-Xue/Presentation/bh-eu-08-xue.pdf},
year = {2008}
}
@misc{Bloom1970,
abstract = {In this paper trade-offs among certain computational factors in hash coding are analyzed. The paradigm problem considered is that of testing a series of messages one-by-one for membership in a given set of messages. Two new hash-coding methods are examined and compared with a particular conventional hash-coding method. The computational factors considered are the size of the hash area (space), the time required to identify a message as a nonmember of the given set (reject time), and an allowable error frequency. The new methods are intended to reduce the amount of space required to contain the hash-coded information from that associated with conventional methods. The reduction in space is accomplished by exploiting the possibility that a small fraction of errors of commission may be tolerable in some applications, in particular, applications in which a large amount of data is involved and a core resident hash area is consequently not feasible using conventional methods. In such applications, it is envisaged that overall performance could be improved by using a smaller core resident hash area in conjunction with the new methods and, when necessary, by using some secondary and perhaps time-consuming test to “catch” the small fraction of errors associated with the new methods. An example is discussed which illustrates possible areas of application for the new methods. Analysis of the paradigm problem demonstrates that allowing a small number of test messages to be falsely identified as members of the given set will permit a much smaller hash area to be used without increasing reject time.},
author = {Bloom, Burton H.},
booktitle = {Communications of the ACM},
doi = {10.1145/362686.362692},
issn = {00010782},
number = {7},
pages = {422--426},
title = {{Space/time trade-offs in hash coding with allowable errors}},
volume = {13},
year = {1970}
}
@article{Wang2009,
abstract = {Kernel rootkits have posed serious security threats due to their stealthy manner. To hide their presence and activities, many rootkits hijack control flows by modifying control data or hooks in the kernel space. A critical step towards eliminating rootkits is to protect such hooks from being hijacked. However, it remains a challenge because there exist a large number of widely-scattered kernel hooks and many of them could be dynamically allocated from kernel heap and co-located together with other kernel data. In addition, there is a lack of flexible commodity hardware support, leading to the socalled protection granularity gap – kernel hook protection requires byte-level granularity but commodity hardware only provides pagelevel protection. To address the above challenges, in this paper, we present Hook- Safe, a hypervisor-based lightweight system that can protect thousands of kernel hooks in a guest OS from being hijacked. One key observation behind our approach is that a kernel hook, once initialized, may be frequently “read”-accessed, but rarely “write”- accessed. As such, we can relocate those kernel hooks to a dedicated page-aligned memory space and then regulate accesses to them with hardware-based page-level protection. We have developed a prototype of HookSafe and used it to protect more than 5, 900 kernel hooks in a Linux guest. Our experiments with nine real-world rootkits show that HookSafe can effectively defeat their attempts to hijack kernel hooks. We also show that HookSafe achieves such a large-scale protection with a small overhead (e.g., around 6\% slowdown in performance benchmarks). Categories and Subject Descriptors D.},
author = {Wang, Zhi and Jiang, Xuxian and Cui, Weidong and Ning, Peng},
doi = {10.1145/1653662.1653728},
file = {:C$\backslash$:/Users/Charlie/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Wang et al. - 2009 - Countering kernel rootkits with lightweight hook protection.pdf:pdf},
isbn = {9781605588940},
issn = {15437221},
journal = {Proceedings of the 16th ACM conference on Computer and communications security - CCS '09},
keywords = {malware protection,rootkits,virtual machines},
pages = {545},
title = {{Countering kernel rootkits with lightweight hook protection}},
url = {http://portal.acm.org/citation.cfm?doid=1653662.1653728},
year = {2009}
}
@article{Vasiliadis2010,
author = {Vasiliadis, Giorgos and Ioannidis, Sotiris},
journal = {Recent Advances in Intrusion Detection},
title = {{Gravity: a massively parallel antivirus engine}},
year = {2010}
}
@unpublished{Okupski2014,
author = {Okupski, Krzysztof},
file = {:C$\backslash$:/Users/Charlie/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Okupski - 2014 - Bitcoin Developer Reference.pdf:pdf},
institution = {Technische Universiteit Eindhoven, The Netherlands},
title = {{Bitcoin Developer Reference}},
year = {2014}
}
@article{Binsalleeh2009,
author = {Binsalleeh, H and Ormerod, T and Boukhtouta, A and Sinha, P and Youssef, A and Debbabi, M and Wang, L},
file = {:C$\backslash$:/Users/Charlie/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Binsalleeh et al. - 2009 - On the Analysis of the Zeus Botnet Crimeware Toolkit.pdf:pdf},
title = {{On the Analysis of the Zeus Botnet Crimeware Toolkit}},
year = {2009}
}
@article{Fox2001,
address = {New York, New York, USA},
archivePrefix = {arXiv},
arxivId = {arXiv:1405.7418v1},
author = {Fox, G},
doi = {10.1145/2660267.2660379},
eprint = {arXiv:1405.7418v1},
file = {:C$\backslash$:/Users/Charlie/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Fox - 2001 - Deanonymistion of clients in Bitcoin P2P Network.pdf:pdf},
isbn = {9781450329576},
journal = {Computing in Science \& Engineering},
pages = {15--29},
publisher = {ACM Press},
title = {{Deanonymistion of clients in Bitcoin P2P Network}},
year = {2010}
}
@article{Chazelle2004,
author = {Chazelle, Bernard and Kilian, Joe and Rubinfeld, R and Tal, A},
journal = {Proceedings of the fifteenth \ldots},
title = {{The Bloomier filter: an efficient data structure for static support lookup tables}},
url = {http://dl.acm.org/citation.cfm?id=982797},
year = {2004}
}
@article{Szydlo2004,
abstract = {Efficient searching for specific subsequences in a set of longer sequences is an important component of many bioinformatics algorithms. Generalised suffix trees and suffix arrays allow searches for a pattern of length n in time proportional to n independent of the length of the sequences, and are thus attractive for a variety of applications. Here, we present an algorithm termed the generalised k-Truncated Suffix Tree (kTST), that represents an adaption of Ukkonen's linear-time suffix tree construction algorithm. The kTST algorithm creates a k-deep tree in linear time that allows rapid searches for short patterns of length of up to k characters. The kTST can offer advantages in computational time and memory usage for searches for short sequences in DNA or protein sequences compared to other suffix-based algorithms.},
author = {Szydlo, M},
doi = {10.1007/978-3-540-24676-3\_32},
isbn = {978-3-540-21935-4},
issn = {1744-5485},
journal = {Lecture notes in computer science},
keywords = {Algorithms,Amino Acid Sequence,Automated,Automated: methods,Base Sequence,DNA,DNA: methods,Molecular Sequence Data,Pattern Recognition,Protein,Protein: methods,Sequence Alignment,Sequence Alignment: methods,Sequence Analysis},
pages = {81--95},
pmid = {18283030},
title = {{Merkle tree traversal in log space and time}},
url = {http://www.springerlink.com/index/qt3fbj2kyk4nlk9q.pdf},
volume = {4},
year = {2004}
}
@article{Roesch1999,
author = {Roesch, Martin and Telecommunications, Stanford},
title = {{Snort - Lightweight Intrusion Detection for Networks}},
year = {1999}
}
@article{Chen2004,
author = {Chen, TM and Robert, JM},
file = {:C$\backslash$:/Users/Charlie/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Chen, Robert - 2004 - The evolution of viruses and worms.pdf:pdf},
isbn = {2147688541},
journal = {Statistical Methods in Computer},
pages = {1--16},
title = {{The evolution of viruses and worms}},
year = {2004}
}
@article{Xiong2014,
author = {Xiong, Sisi and Yao, Yanjun and Cao, Qing and He, Tian},
doi = {10.1109/INFOCOM.2014.6848046},
isbn = {978-1-4799-3360-0},
journal = {INFOCOM, 2014 Proceedings \ldots},
month = apr,
pages = {1150--1158},
publisher = {Ieee},
title = {{kBF: A Bloom Filter for key-value storage with an application on approximate state machines}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6848046 http://ieeexplore.ieee.org/xpls/abs\_all.jsp?arnumber=6848046},
year = {2014}
}
@article{Ollmann2008,
abstract = {In the last half-decade, the motivations behind malware creation have changed considerably. What was once attributed to solitary attention-driven individuals working from their bedroom-office has now evolved into an international collective of professionally trained authors motivated by high profit. These financially driven conglomerates offer all manner of business models - buying, leasing, subscription and even pay-as-you-go malware financial schemes - all of which are competitively priced to attract prospective patrons. ?? 2008 Elsevier Ltd. All rights reserved.},
author = {Ollmann, Gunter},
doi = {10.1016/S1361-3723(08)70135-0},
issn = {13613723},
journal = {Computer Fraud and Security},
pages = {4--7},
title = {{The evolution of commercial malware development kits and colour-by-numbers custom malware}},
volume = {2008},
year = {2008}
}
@article{Kroll2013,
author = {Kroll, JA and Davey, IC and Felten, EW},
file = {:C$\backslash$:/Users/Charlie/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Kroll, Davey, Felten - 2013 - The economics of Bitcoin mining, or Bitcoin in the presence of adversaries.pdf:pdf},
journal = {Proceedings of WEIS},
number = {Weis},
pages = {1--21},
title = {{The economics of Bitcoin mining, or Bitcoin in the presence of adversaries}},
year = {2013}
}
@article{Castro1999,
author = {Castro, Miguel and Liskov, Barbara},
journal = {OSDI},
number = {February},
pages = {1--14},
title = {{Practical Byzantine fault tolerance}},
url = {https://www.usenix.org/events/osdi99/full\_papers/castro/castro\_html/node9.html},
year = {1999}
}
@article{Duy,
author = {Tuan, NDA and Hieu, BT and Thinh, TN},
file = {:C$\backslash$:/Users/Charlie/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Tuan, Hieu, Thinh - 2010 - High performance pattern matching using bloom-bloomier filter.pdf:pdf},
journal = {\ldots and Information Technology ( \ldots},
pages = {0--4},
title = {{High performance pattern matching using bloom-bloomier filter}},
url = {http://ieeexplore.ieee.org/xpls/abs\_all.jsp?arnumber=5491585},
year = {2010}
}
@article{Chen2003,
author = {Chen, TM},
file = {:C$\backslash$:/Users/Charlie/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Chen - 2003 - Trends in viruses and worms.pdf:pdf},
journal = {The Internet Protocol Journal},
pages = {23--33},
title = {{Trends in viruses and worms}},
year = {2003}
}
@article{Reid2011,
archivePrefix = {arXiv},
arxivId = {1107.4524},
author = {Reid, Fergal and Harrigan, Martin},
eprint = {1107.4524},
file = {:C$\backslash$:/Users/Charlie/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Reid, Harrigan - 2011 - An Analysis of Anonymity in the Bitcoin System.pdf:pdf},
month = jul,
title = {{An Analysis of Anonymity in the Bitcoin System}},
url = {http://arxiv.org/abs/1107.4524v2},
year = {2011}
}
@article{Johnson2001,
abstract = {The Elliptic Curve Digital Signature Algorithm (ECDSA) is the elliptic curve analogue of the Digital Signature Algorithm (DSA). It was accepted in 1999 as an ANSI standard and in 2000 as IEEE and NIST standards. It was also accepted in 1998 as an ISO standard and is under consideration for inclusion in some other ISO standards. Unlike the ordinary discrete logarithm problem and the integer factorization problem, no subexponential-time algorithm is known for the elliptic curve discrete logarithm problem. For this reason, the strength-per-key-bit is substantially greater in an algorithm that uses elliptic curves. This paper describes the ANSI X9.62 ECDSA, and discusses related security, implementation, and interoperability issues.},
author = {Johnson, Don and Menezes, Alfred and Vanstone, Scott},
doi = {10.1007/s102070100002},
file = {:C$\backslash$:/Users/Charlie/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Johnson, Menezes, Vanstone - 2001 - The Elliptic Curve Digital Signature Algorithm (ECDSA).pdf:pdf},
issn = {1615-5262},
journal = {International Journal of Information Security},
keywords = {DSA,ECDSA,elliptic curve cryptography,signature schemes},
pages = {36--63},
title = {{The Elliptic Curve Digital Signature Algorithm (ECDSA)}},
volume = {1},
year = {2001}
}
@article{Nakamoto2008,
abstract = {A purely peer-to-peer version of electronic cash would allow online payments to be sent directly from one party to another without going through a financial institution. Digital signatures provide part of the solution, but the main benefits are lost if a trusted third party is still required to prevent double-spending. We propose a solution to the double-spending problem using a peer-to-peer network. The network timestamps transactions by hashing them into an ongoing chain of hash-based proof-of-work, forming a record that cannot be changed without redoing the proof-of-work. The longest chain not only serves as proof of the sequence of events witnessed, but proof that it came from the largest pool of CPU power. As long as a majority of CPU power is controlled by nodes that are not cooperating to attack the network, they'll generate the longest chain and outpace attackers. The network itself requires minimal structure. Messages are broadcast on a best effort basis, and nodes can leave and rejoin the network at will, accepting the longest proof-of-work chain as proof of what happened while they were gone.},
author = {Nakamoto, Satoshi},
doi = {10.1007/s10838-008-9062-0},
file = {:C$\backslash$:/Users/Charlie/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Nakamoto - 2008 - Bitcoin A Peer-to-Peer Electronic Cash System.pdf:pdf},
isbn = {978-972-757-716-3},
issn = {09254560},
journal = {Consulted},
pages = {1--9},
pmid = {14533183},
title = {{Bitcoin: A Peer-to-Peer Electronic Cash System}},
url = {http://s.kwma.kr/pdf/Bitcoin/bitcoin.pdf},
year = {2008}
}
@article{Cha2011,
abstract = {We present the design and implementation of a novel anti-malware system called SplitScreen. SplitScreen performs an additional screening step prior to the signature matching phase found in existing approaches. The screening step filters out most non-infected files (90\%) and also identifies malware signatures that are not of interest (99\%). The screening step significantly improves end-to-end performance because safe files are quickly identified and are not processed further, and malware files can subsequently be scanned using only the signatures that are necessary. Our approach naturally leads to a network-based anti-malware solution in which clients only receive signatures they needed, not every malware signature ever created as with current approaches. We have implemented SplitScreen as an extension to ClamAV 13, the most popular open source anti-malware software. For the current number of signatures, our implementation is 2 faster and requires 2 less memory than the original ClamAV. These gaps widen as the number of signatures grows.},
author = {Cha, Sang Kil and Moraru, Iulian and Jang, Jiyong and Truelove, John and Brumley, David and Andersen, David G.},
doi = {10.1109/JCN.2011.6157418},
file = {:C$\backslash$:/Users/Charlie/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Cha et al. - 2011 - SplitScreen Enabling efficient, distributed malware detection.pdf:pdf},
isbn = {1229-2370},
issn = {12292370},
journal = {Journal of Communications and Networks},
keywords = {Anti-malware,Bloom filter,Signature matching},
pages = {187--200},
title = {{SplitScreen: Enabling efficient, distributed malware detection}},
volume = {13},
year = {2011}
}
@misc{Stolfi2008,
author = {Stolfi, Jorge},
file = {:C$\backslash$:/Users/Charlie/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Stolfi - 2008 - Cryptographic Hash Function.svg:svg},
title = {{Cryptographic Hash Function}},
year = {2008}
}
@article{Christodorescu2005,
author = {Christodorescu, M. and Jha, S. and Seshia, S.a. and Song, D. and Bryant, R.E.},
doi = {10.1109/SP.2005.20},
file = {:C$\backslash$:/Users/Charlie/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Christodorescu et al. - 2005 - Semantics-Aware Malware Detection.pdf:pdf},
isbn = {0-7695-2339-0},
journal = {2005 IEEE Symposium on Security and Privacy (S\&P'05)},
pages = {32--46},
publisher = {Ieee},
title = {{Semantics-Aware Malware Detection}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=1425057},
year = {2005}
}
@techreport{Symantec2013,
abstract = {Symantec has established some of the most comprehensive sources of Internet threat data in the world through the Symantec™ Global Intelligence Network, which is made up of approximately 69 million attack sensors and records thousands of events per second. This network monitors threat activity in over 157 countries and territories through a combination of Symantec products and services such as Symantec DeepSight™ Threat Management System, Symantec™ Managed Security Services and Norton™ consumer products, and other third-party data sources.},
author = {Symantec},
booktitle = {Security Report},
doi = {10.1016/S1353-4858(05)00194-7},
isbn = {2007111215543},
pages = {58},
title = {{Internet Security Threat Report: Trends for 2012}},
url = {http://www.symantec.com/content/en/us/enterprise/other\_resources/b-istr\_main\_report\_v18\_2012\_21291018.en-us.pdf},
year = {2013}
}
